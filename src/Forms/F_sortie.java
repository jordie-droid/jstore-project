/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import ConnectDataBase.ConnectDataBase;
import Controleur.ChiffreLettre;
import Controleur.SubJTable;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Pascal_De_Marie
 */
public class F_sortie extends javax.swing.JDialog {

    Statement st;
    ResultSet rs;
    private DefaultTableModel dtm;
    Object row[] = new Object[6];
    private double q0;
    private double q1;
    private double qte;
    private double pu;

    /**
     * Creates new form F_sortie
     */
    public F_sortie(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.getContentPane().setBackground(Color.white);
        //imagePanel1.setImage(new ImageIcon(this.getClass().getResource("/Icons/B1.PNG")).getImage());
        this.setIconImage(new ImageIcon(getClass().getResource("/Icons/viewoptions.png")).getImage());
        setLocationRelativeTo(null);
        TabCom.setDefaultRenderer(Object.class, new SubJTable());
        tabrech.setDefaultRenderer(Object.class, new SubJTable());
        jstabrech.setVisible(false);
        txtnom.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imagePanel1 = new picturepanel.ImagePanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        Zdate = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        Znfac = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jstabrech = new javax.swing.JScrollPane();
        tabrech = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        txtnom = new javax.swing.JTextField();
        radprod = new javax.swing.JRadioButton();
        radcli = new javax.swing.JRadioButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ZrefCli = new javax.swing.JTextField();
        Zcli = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        ZrefArt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        Zart = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        Zqte = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        Zpu = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        zqtestock = new javax.swing.JTextField();
        zpustock = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        Znet = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabCom = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setFont(new java.awt.Font("Century Gothic", 0, 12));
        setForeground(new java.awt.Color(0, 102, 153));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setOpaque(false);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel5.setOpaque(false);
        jPanel5.setLayout(null);

        Zdate.setForeground(new java.awt.Color(0, 102, 153));
        Zdate.setDateFormatString("yyyy-MM-dd");
        Zdate.setFont(new java.awt.Font("Century Gothic", 0, 12));
        jPanel5.add(Zdate);
        Zdate.setBounds(50, 11, 148, 22);

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 12));
        jLabel1.setText("Numéro facture :");
        jPanel5.add(jLabel1);
        jLabel1.setBounds(10, 42, 109, 16);

        Znfac.setFont(new java.awt.Font("Century Gothic", 0, 12));
        Znfac.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        Znfac.setEnabled(false);
        jPanel5.add(Znfac);
        Znfac.setBounds(123, 39, 75, 22);

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 12));
        jLabel2.setText("Date :");
        jPanel5.add(jLabel2);
        jLabel2.setBounds(10, 11, 36, 22);

        jstabrech.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jstabrechMouseClicked(evt);
            }
        });

        tabrech.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabrech.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabrechMouseClicked(evt);
            }
        });
        jstabrech.setViewportView(tabrech);

        jPanel5.add(jstabrech);
        jstabrech.setBounds(390, 40, 167, 50);

        jLabel12.setText("Rechercher : ");
        jPanel5.add(jLabel12);
        jLabel12.setBounds(320, 20, 65, 20);

        txtnom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtnomKeyReleased(evt);
            }
        });
        jPanel5.add(txtnom);
        txtnom.setBounds(390, 20, 167, 20);

        radprod.setText("Article");
        radprod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radprodActionPerformed(evt);
            }
        });
        jPanel5.add(radprod);
        radprod.setBounds(240, 40, 70, 23);

        radcli.setText("Client");
        radcli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radcliActionPerformed(evt);
            }
        });
        jPanel5.add(radcli);
        radcli.setBounds(240, 10, 70, 23);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 230, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 72, Short.MAX_VALUE)
        );

        jPanel5.add(jPanel6);
        jPanel6.setBounds(340, 20, 230, 72);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel2.setOpaque(false);

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 12));
        jLabel3.setText("Client :");

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 12));
        jLabel4.setText("Réf. :");

        ZrefCli.setFont(new java.awt.Font("Century Gothic", 0, 12));
        ZrefCli.setEnabled(false);

        Zcli.setFont(new java.awt.Font("Century Gothic", 0, 12));
        Zcli.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "" }));
        Zcli.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                ZcliPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 153, 204));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/save_1.png"))); // NOI18N
        jButton1.setText("Enregistrer");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                    .addComponent(Zcli, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ZrefCli, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(Zcli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(ZrefCli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel3.setOpaque(false);

        jLabel6.setFont(new java.awt.Font("Century Gothic", 0, 12));
        jLabel6.setText("Référence :");

        ZrefArt.setFont(new java.awt.Font("Century Gothic", 0, 12));
        ZrefArt.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 12));
        jLabel5.setText("Article :");

        Zart.setFont(new java.awt.Font("Century Gothic", 0, 12));
        Zart.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "" }));
        Zart.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                ZartPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jLabel7.setFont(new java.awt.Font("Century Gothic", 0, 12));
        jLabel7.setText("Qte :");

        Zqte.setFont(new java.awt.Font("Century Gothic", 0, 12));
        Zqte.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        Zqte.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ZqteKeyPressed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Century Gothic", 0, 12));
        jLabel8.setText("PU :");

        Zpu.setFont(new java.awt.Font("Century Gothic", 0, 12));
        Zpu.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel9.setFont(new java.awt.Font("Century Gothic", 0, 12));
        jLabel9.setText("Qte. Stock :");

        zqtestock.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        zqtestock.setEnabled(false);

        zpustock.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        zpustock.setEnabled(false);

        jLabel11.setFont(new java.awt.Font("Century Gothic", 0, 12));
        jLabel11.setText("PU. Entrée :");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ZrefArt, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                            .addComponent(Zart, 0, 197, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Zqte)
                            .addComponent(Zpu, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(zpustock, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                            .addComponent(zqtestock, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(Zart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(ZrefArt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(Zqte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(zqtestock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(Zpu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zpustock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel4.setOpaque(false);

        Znet.setFont(new java.awt.Font("Century Gothic", 0, 12));
        Znet.setEnabled(false);

        jLabel10.setFont(new java.awt.Font("Century Gothic", 0, 12));
        jLabel10.setText("Net à payer :");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Znet, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(Znet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jButton2.setBackground(new java.awt.Color(0, 153, 204));
        jButton2.setFont(new java.awt.Font("Century Gothic", 0, 12));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Capture.PNG"))); // NOI18N
        jButton2.setText("Ajouter la commande");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 153, 204));
        jButton3.setFont(new java.awt.Font("Century Gothic", 0, 12));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/b_drop.png"))); // NOI18N
        jButton3.setText("Enlever la commande");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(0, 153, 204));
        jButton4.setFont(new java.awt.Font("Century Gothic", 0, 12));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/redo.png"))); // NOI18N
        jButton4.setText("Annuler toutes les commandes");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Pagné "));
        jPanel7.setOpaque(false);

        TabCom.setFont(new java.awt.Font("Century Gothic", 0, 12));
        TabCom.setForeground(new java.awt.Color(0, 102, 153));
        TabCom.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numéro", "Client", "Article", "Quantité", "Prix unitaire", "Date"
            }
        ));
        jScrollPane1.setViewportView(TabCom);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButton5.setBackground(new java.awt.Color(0, 153, 204));
        jButton5.setFont(new java.awt.Font("Century Gothic", 0, 12));
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/b_usrcheck.png"))); // NOI18N
        jButton5.setText("Valider et facturer");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout imagePanel1Layout = new javax.swing.GroupLayout(imagePanel1);
        imagePanel1.setLayout(imagePanel1Layout);
        imagePanel1Layout.setHorizontalGroup(
            imagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        imagePanel1Layout.setVerticalGroup(
            imagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(imagePanel1Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(imagePanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(imagePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        Zcli();
        Zart();
        Znfac.setText(String.valueOf(Numfacture()));
        NetPayer();
        setData();// TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void ZcliPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_ZcliPopupMenuWillBecomeInvisible
        try {
            st = new ConnectDataBase().getConnetion().createStatement();
            String req = "select t_client.refcli from t_client where nomscli='" + Zcli.getSelectedItem() + "'";
            rs = st.executeQuery(req);
            while (rs.next()) {
                ZrefCli.setText(rs.getObject(1).toString());
            }
        } catch (Exception e) {
            System.out.print(e);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_ZcliPopupMenuWillBecomeInvisible

    private void ZartPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_ZartPopupMenuWillBecomeInvisible
        /*try {
            st = new ConnectDataBase().getConnetion().createStatement();
            String req = "select t_article.refart from t_article where design='" + Zart.getSelectedItem() + "'";
            rs = st.executeQuery(req);
            while (rs.next()) {
                ZrefArt.setText(rs.getObject(1).toString());
            }
        } catch (Exception e) {
            System.out.print(e);
        }*/
        String id, nom;
        String ent[] = {"", "", "", ""};
        double qtestock, pustock;
        Object row[] = new Object[4];
        DefaultTableModel dtm = new DefaultTableModel(null, ent);
        try {
            st = new ConnectDataBase().getConnetion().createStatement();
            String req = "select t_article.refart,t_article.design,t_entrer.PrixUnitaire,t_stock.QteStock from t_article,t_entrer,t_stock where t_entrer.refart=t_article.refart and t_article.refart=t_stock.refart and t_entrer.refart=t_stock.refart and t_article.design= '" + Zart.getSelectedItem() + "'";
            rs = st.executeQuery(req);
            while (rs.next()) {
                row[0] = rs.getObject(1);
                row[1] = rs.getObject(2);
                row[2] = rs.getObject(3);
                row[3] = rs.getObject(4);
                dtm.addRow(row);
            }
            id = dtm.getValueAt(0, 0).toString();
            nom = dtm.getValueAt(0, 1).toString();
            pustock = Double.parseDouble(dtm.getValueAt(0, 2).toString());
            qtestock = Double.parseDouble(dtm.getValueAt(0, 3).toString());
            ZrefArt.setText(String.valueOf(id));
            Zart.setSelectedItem(nom);
            zqtestock.setText(String.valueOf(qtestock));
            zpustock.setText(String.valueOf(pustock));
        } catch (Exception ex) {
            //System.out.print(ex);
            JOptionPane.showMessageDialog(null, "Article non entré dans votre JStore.", "JStore : ERREUR", JOptionPane.ERROR_MESSAGE);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_ZartPopupMenuWillBecomeInvisible

    private void ZqteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ZqteKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_ZqteKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        addCommande();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        deleteCommande();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        valideCom();
        /*Menu mn=new Menu();
        mn.dateheure();*/// TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        deleteCommand();
        ((JTextField) Zdate.getDateEditor().getUiComponent()).setText(null);
        Zqte.setText(null);
        Zpu.setText(null);
        Zcli.setSelectedIndex(0);
        Zart.setSelectedIndex(0);
        Znfac.setText(String.valueOf(Numfacture()));
        ZrefCli.setText(null);
        ZrefArt.setText(null);
        Zqte.setText(null);
        Zpu.setText(null);
        NetPayer();
        ((JTextField) Zdate.getDateEditor().getUiComponent()).requestFocus(); // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void radcliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radcliActionPerformed
        if (radcli.isSelected()) {
            radprod.setSelected(false);
            txtnom.setEnabled(true);
            txtnom.setText(null);
            txtnom.requestFocus();
        } else {
            radcli.setSelected(false);
            radprod.setSelected(true);
            txtnom.setEnabled(true);
            txtnom.setText(null);
            txtnom.requestFocus();
        }// TODO add your handling code here:
    }//GEN-LAST:event_radcliActionPerformed

    private void radprodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radprodActionPerformed
        if (radprod.isSelected()) {
            radcli.setSelected(false);
            txtnom.setEnabled(true);
            txtnom.setText(null);
            txtnom.requestFocus();
        } else {
            radcli.setSelected(true);
            radprod.setSelected(false);
            txtnom.setEnabled(true);
            txtnom.setText(null);
            txtnom.requestFocus();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_radprodActionPerformed

    private void txtnomKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnomKeyReleased
        String id, nom;
        String ent[] = {""};
        double qtestock, pustock;
        Object row[] = new Object[1];
        DefaultTableModel dtm = new DefaultTableModel(null, ent);
        if (radprod.isSelected()) {
            try {
                if (txtnom.getText().isEmpty()) {
                    jstabrech.setVisible(false);
                } else {
                    jstabrech.setVisible(true);
                    st = new ConnectDataBase().getConnetion().createStatement();
                    /*String req = "select t_article.ref,t_article.design,t_entrer.PrixUnitaire,t_entrer.QteEntrer from t_article,t_entrer where t_entrer.refart=t_article.refart and t_article.design like '" + txtnom.getText() + "%'";
                rs = st.executeQuery(req);
                while (rs.next()) {
                    row[0]=rs.getObject(1);
                    row[1]=rs.getObject(2);
                    row[2]=rs.getObject(3);
                    row[3]=rs.getObject(4);
                    dtm.addRow(row);
                }*/
                    String req = "select t_article.design from t_article where t_article.design like '" + txtnom.getText() + "%'";
                    rs = st.executeQuery(req);
                    while (rs.next()) {
                        row[0] = rs.getObject(1);
                        dtm.addRow(row);
                    }
                    tabrech.setModel(dtm);
                    if (tabrech.getRowCount() == 0) {
                        jstabrech.setVisible(false);
                    }
                }
            } catch (Exception ex) {
                System.out.print(ex);
            }
        } else if (radcli.isSelected()) {
            try {
                if (txtnom.getText().isEmpty()) {
                    jstabrech.setVisible(false);
                } else {
                    jstabrech.setVisible(true);
                    st = new ConnectDataBase().getConnetion().createStatement();
                    /*String req = "select t_article.ref,t_article.design,t_entrer.PrixUnitaire,t_entrer.QteEntrer from t_article,t_entrer where t_entrer.refart=t_article.refart and t_article.design like '" + txtnom.getText() + "%'";
                rs = st.executeQuery(req);
                while (rs.next()) {
                    row[0]=rs.getObject(1);
                    row[1]=rs.getObject(2);
                    row[2]=rs.getObject(3);
                    row[3]=rs.getObject(4);
                    dtm.addRow(row);
                }*/
                    String req = "select t_client.nomscli from t_client where t_client.nomscli like '" + txtnom.getText() + "%'";
                    rs = st.executeQuery(req);
                    while (rs.next()) {
                        row[0] = rs.getObject(1);
                        dtm.addRow(row);
                    }
                    tabrech.setModel(dtm);
                    if (tabrech.getRowCount() == 0) {
                        jstabrech.setVisible(false);
                    }
                }
            } catch (Exception ex) {
                System.out.print(ex);
            }
        }// TODO add your handling code here:
    }//GEN-LAST:event_txtnomKeyReleased

    private void jstabrechMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jstabrechMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jstabrechMouseClicked

    private void tabrechMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabrechMouseClicked
        String id, nom;
        String ent[] = {"", "", "", ""};
        double qtestock, pustock;
        Object row[] = new Object[4];
        DefaultTableModel dtm = new DefaultTableModel(null, ent);
        txtnom.setText(tabrech.getValueAt(tabrech.getSelectedRow(), 0).toString());
        if (radprod.isSelected()) {
            try {
                st = new ConnectDataBase().getConnetion().createStatement();
                String req = "select t_article.refart,t_article.design,t_entrer.PrixUnitaire,t_stock.QteStock from t_article,t_entrer,t_stock where t_entrer.refart=t_article.refart and t_article.refart=t_stock.refart and t_entrer.refart=t_stock.refart and t_article.design= '" + txtnom.getText() + "'";
                rs = st.executeQuery(req);
                while (rs.next()) {
                    row[0] = rs.getObject(1);
                    row[1] = rs.getObject(2);
                    row[2] = rs.getObject(3);
                    row[3] = rs.getObject(4);
                    dtm.addRow(row);
                }
                id = dtm.getValueAt(0, 0).toString();
                nom = dtm.getValueAt(0, 1).toString();
                pustock = Double.parseDouble(dtm.getValueAt(0, 2).toString());
                qtestock = Double.parseDouble(dtm.getValueAt(0, 3).toString());
                ZrefArt.setText(String.valueOf(id));
                Zart.setSelectedItem(nom);
                zqtestock.setText(String.valueOf(qtestock));
                zpustock.setText(String.valueOf(pustock));
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Article non entré dans votre JStore.", "JStore : ERREUR", JOptionPane.ERROR_MESSAGE);
            }
        } else if (radcli.isSelected()) {
            try {
                String idcli, nomcli;
                String ente[] = {"", ""};
                Object row1[] = new Object[2];
                DefaultTableModel dtm1 = new DefaultTableModel(null, ente);
                st = new ConnectDataBase().getConnetion().createStatement();
                String req = "select t_client.refcli,t_client.nomscli from t_client where t_client.nomscli= '" + txtnom.getText() + "'";
                rs = st.executeQuery(req);
                while (rs.next()) {
                    row[0] = rs.getObject(1);
                    row[1] = rs.getObject(2);
                    dtm1.addRow(row);
                }
                idcli = dtm1.getValueAt(0, 0).toString();
                nomcli = dtm1.getValueAt(0, 1).toString();
                ZrefCli.setText(String.valueOf(idcli));
                Zcli.setSelectedItem(nomcli);
            } catch (Exception ex) {
                System.out.print(ex);
            }
        }
        jstabrech.setVisible(false);     // TODO add your handling code here:
    }//GEN-LAST:event_tabrechMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        F_Client cli = new F_Client(new javax.swing.JFrame(), true);
        cli.show();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    public void deleteCommand() {

        try {
            String raqaddcomm = "delete from t_mvm";
            st = new ConnectDataBase().getConnetion().createStatement();
            st.executeUpdate(raqaddcomm);
            setData();
        } catch (Exception ex) {
            System.out.print(ex);
        }

    }

    public void Zcli() {
        try {
            st = new ConnectDataBase().getConnetion().createStatement();
            String req = "select t_client.nomscli from t_client";
            rs = st.executeQuery(req);
            while (rs.next()) {
                Zcli.addItem(rs.getObject(1));
            }
        } catch (Exception e) {
            System.out.print(e);
        }
    }

    public void Zart() {
        try {
            st = new ConnectDataBase().getConnetion().createStatement();
            String req = "select t_article.design from t_article";
            rs = st.executeQuery(req);
            while (rs.next()) {
                Zart.addItem(rs.getObject(1));
            }
        } catch (Exception e) {
            System.out.print(e);
        }
    }

    public int Numcom() {
        int num = 0;
        try {
            st = new ConnectDataBase().getConnetion().createStatement();
            String req = "select max(Numcom) from t_mvm";
            rs = st.executeQuery(req);
            if (rs.next()) {
                num = 0 + rs.getInt(1);
            }
        } catch (Exception e) {
            System.out.print(e);
        }
        return num + 1;
    }

    public double QteStock() {
        double num = 0;
        try {
            st = new ConnectDataBase().getConnetion().createStatement();
            String req = "select QteStock from t_stock where refart='" + ZrefArt.getText() + "'";
            rs = st.executeQuery(req);
            if (rs.next()) {
                num = 0 + rs.getInt(1);
            }
        } catch (Exception e) {
            System.out.print(e);
        }
        return num;
    }

    public double PrixUnitaire() {
        double num = 0;
        try {
            st = new ConnectDataBase().getConnetion().createStatement();
            String req = "select pu from t_mvmstock where refart='" + ZrefArt.getText() + "'";
            rs = st.executeQuery(req);
            if (rs.next()) {
                num = 0 + rs.getInt(1);
            }
        } catch (Exception e) {
            System.out.print(e);
        }
        return num;
    }
    String fantaume = "";

    public double QteStock1() {
        double num = 0;
        try {
            st = new ConnectDataBase().getConnetion().createStatement();
            String req = "select QteStock from t_stock where refart='" + fantaume + "'";
            rs = st.executeQuery(req);
            if (rs.next()) {
                num = 0 + rs.getInt(1);
            }
        } catch (Exception e) {
            System.out.print(e);
        }
        return num;
    }

    public void setData() {

        try {
            String raqselect = "select t_mvm.Numcom,t_client.nomscli,t_article.design,t_mvm.Qte,t_mvm.pu,t_mvm.datesortie from t_mvm,t_article,t_client where t_client.refcli=t_mvm.refcli and t_article.refart=t_mvm.refart order by t_mvm.Numcom";
            st = new ConnectDataBase().getConnetion().createStatement();
            String entete[] = {"Numéro", "Client", "Designation", "Quantité", "Prix unitaire", "Date sortie"};
            dtm = new DefaultTableModel(null, entete);
            rs = st.executeQuery(raqselect);
            while (rs.next()) {
                row[0] = rs.getObject(1);
                row[1] = rs.getObject(2);
                row[2] = rs.getObject(3);
                row[3] = rs.getObject(4);
                row[4] = rs.getObject(5);
                row[5] = rs.getObject(6);
                dtm.addRow(row);
            }
            TabCom.setModel(dtm);
        } catch (Exception ex) {
            System.out.print(ex.toString());
        }

    }

    public String BcapAPostrophe(String zone) {
        String vchamp = zone;
        vchamp = vchamp.replace("'", "''");
        return vchamp;
        //optimisation de certains codes
    }

    public int somme() {
        int numrow = 0;
        try {
            String raqselect = "select sum(Qte*pu) from t_mvm";
            st = new ConnectDataBase().getConnetion().createStatement();
            rs = st.executeQuery(raqselect);
            if (rs.next()) {
                numrow = 0 + rs.getInt(1);
            }
        } catch (Exception ex) {
            System.out.print(ex);
        }
        return numrow;
    }

    public int Numfacture() {
        int numrow = 0;
        try {
            String raqselect = "select max(Numfacture) from t_sortie";
            st = new ConnectDataBase().getConnetion().createStatement();
            rs = st.executeQuery(raqselect);
            if (rs.next()) {
                numrow = 0 + rs.getInt(1);
            }
        } catch (Exception ex) {
            System.out.print(ex);
        }
        return numrow + 1;
    }

    public int Numsortie() {
        int numrow = 0;
        try {
            String raqselect = "select max(RowNum) from t_sortie";
            st = new ConnectDataBase().getConnetion().createStatement();
            rs = st.executeQuery(raqselect);
            if (rs.next()) {
                numrow = 0 + rs.getInt(1);
            }
        } catch (Exception ex) {
            System.out.print(ex);
        }
        return numrow + 1;
    }

    public void NetPayer() {
        double net = somme();
        Znet.setText(String.valueOf(net));
    }

    public void addCommande() {

        try {
            qte = +Double.valueOf(Zqte.getText());
            pu = +Double.valueOf(Zpu.getText());
            if (qte > QteStock()) {
                JOptionPane.showMessageDialog(null, "Attention ! La quantité commandée est\nsuperieure à la quantité en stock.", "JStore : ERREUR", JOptionPane.WARNING_MESSAGE);
            } else if (pu <= PrixUnitaire()) {
                JOptionPane.showMessageDialog(null, "Attention ! Le prix unitaire saisi est\ninferieur ou égale au prix unitaire d'entrée.", "JStore : ERREUR", JOptionPane.WARNING_MESSAGE);
            } else {
                String raqselect = "select * from t_mvm where refart='" + ZrefArt.getText() + "'";
                st = new ConnectDataBase().getConnetion().createStatement();
                String entete[] = {"Numéro", "Client", "Designation", "Quantité", "Prix unitaire", "Date sortie"};
                dtm = new DefaultTableModel(null, entete);
                rs = st.executeQuery(raqselect);
                while (rs.next()) {
                    row[0] = rs.getObject(1);
                    row[1] = rs.getObject(2);
                    row[2] = rs.getObject(3);
                    row[3] = rs.getObject(4);
                    row[4] = rs.getObject(5);
                    row[5] = rs.getObject(6);
                    dtm.addRow(row);
                }
                if (dtm.getRowCount() != 0) {
                    JOptionPane.showMessageDialog(null, "Cet article est déjà commandé.", "JStore : ERREUR", JOptionPane.ERROR_MESSAGE);
                } else {
                    String raqaddcomm = "Insert into t_mvm values('" + Numcom() + "','" + BcapAPostrophe(ZrefCli.getText()) + "','" + BcapAPostrophe(ZrefArt.getText()) + "','" + Zqte.getText() + "','" + Zpu.getText() + "','" + ((JTextField) Zdate.getDateEditor().getUiComponent()).getText() + "')";
                    st = new ConnectDataBase().getConnetion().createStatement();
                    st.executeUpdate(raqaddcomm);
                    setData();
                    NetPayer();
                }
            }
        } catch (Exception ex) {
            System.out.print(ex);
        }

    }

    public void deleteCommande() {
        try {
            if (TabCom.getSelectedRow() < 0) {
                if (TabCom.getRowCount() <= 0) {
                } else {
                    JOptionPane.showMessageDialog(null, "Veuilez selectionner dans le tableau la ligne de la commande à enlever.", "JStore : ERREUR", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                String raqaddcomm = "delete from t_mvm where Numcom='" + TabCom.getValueAt(TabCom.getSelectedRow(), 0) + "'";
                st = new ConnectDataBase().getConnetion().createStatement();
                st.executeUpdate(raqaddcomm);
                setData();
            }
        } catch (Exception ex) {
            System.out.print(ex);
        }
    }
    int i;

    public int numrowmve() {
        int r = 0;
        try {
            String rq = "SELECT max(numentrer) FROM t_mvmstock";
            st = new ConnectDataBase().getConnetion().createStatement();
            rs = st.executeQuery(rq);
            if (rs.next()) {
                r = 0 + rs.getInt(1);
            }
        } catch (Exception ex) {
            System.out.print(ex);
        }
        return r + 1;
    }

    public void valideCom() {
        if (Zcli.getSelectedIndex() == 0 || ZrefCli.getText().isEmpty() || Zart.getSelectedIndex() == 0 || ZrefArt.getText().isEmpty() || Zqte.getText().isEmpty() || Zpu.getText().isEmpty() || ((JTextField) Zdate.getDateEditor().getUiComponent()).getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Veuillez remplir toutes les zones.", "JStore : ERREUR", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                String raqselect = "select * from t_mvm";
                st = new ConnectDataBase().getConnetion().createStatement();
                String entete[] = {"Numéro commande", "Noms client", "Designation article", "Quantité", "Prix unitaire", "Date sortie"};
                dtm = new DefaultTableModel(null, entete);
                rs = st.executeQuery(raqselect);
                while (rs.next()) {
                    row[0] = rs.getObject(1);
                    row[1] = rs.getObject(2);
                    row[2] = rs.getObject(3);
                    row[3] = rs.getObject(4);
                    row[4] = rs.getObject(5);
                    row[5] = rs.getObject(6);
                    dtm.addRow(row);
                }
                for (i = 0; i < dtm.getRowCount(); i++) {
                    String raqaddcomm = "insert into t_sortie values('" + Numsortie() + "','" + BcapAPostrophe(dtm.getValueAt(i, 5).toString()) + "','" + BcapAPostrophe(dtm.getValueAt(i, 3).toString()) + "','" + BcapAPostrophe(dtm.getValueAt(i, 4).toString()) + "','" + BcapAPostrophe(dtm.getValueAt(i, 0).toString()) + "','" + Znfac.getText() + "','" + BcapAPostrophe(dtm.getValueAt(i, 1).toString()) + "','" + BcapAPostrophe(dtm.getValueAt(i, 2).toString()) + "')";
                    st = new ConnectDataBase().getConnetion().createStatement();
                    st.executeUpdate(raqaddcomm);
                    q0 = Double.parseDouble(dtm.getValueAt(i, 3).toString());
                    fantaume = BcapAPostrophe(dtm.getValueAt(i, 2).toString());
                    q1 = QteStock1() - q0;
                    String raqups = "update t_stock set QteStock='" + q1 + "' where refart='" + BcapAPostrophe(dtm.getValueAt(i, 2).toString()) + "'";
                    st.executeUpdate(raqups);
                    String raqdel = "delete from t_mvm where refart='" + BcapAPostrophe(dtm.getValueAt(i, 2).toString()) + "'";
                    st.executeUpdate(raqdel);
                    String reqst = "insert into t_mvmstock values ('" + numrowmve() + "','" + BcapAPostrophe(dtm.getValueAt(i, 2).toString()) + "','" + q1 + "','" + Zpu.getText() + "','" + ((JTextField) Zdate.getDateEditor().getUiComponent()).getText() + "')";
                    st.executeUpdate(reqst);
                }
                //module à faire

                setData();
                F_vueFacture vueFac = new F_vueFacture(new javax.swing.JFrame(), true);
                String reqEfac = "Select RaisSoc, StatJuri, Adresse, Tele, Email from t_jstore";
                rs = st.executeQuery(reqEfac);
                while (rs.next()) {
                    vueFac.TextFac.setText(rs.getString(1) + " " + rs.getString(2) + "\n" + rs.getString(3) + "\n" + rs.getString(4) + "\n" + rs.getString(5) + "\n----------------------" + "\n" + "\n");
                }
                String reqfac = "Select t_sortie.NumFacture,t_sortie.DateSortie,t_sortie.Numcom,t_article.design,t_sortie.QteSortie,t_sortie.PrixUnitaire,sum(t_sortie.QteSortie * t_sortie.PrixUnitaire),t_client.nomscli from t_sortie,t_article,t_client where t_sortie.refart=t_article.refart and t_client.refcli=t_sortie.refcli and t_sortie.DateSortie='" + ((JTextField) Zdate.getDateEditor().getUiComponent()).getText() + "' and t_sortie.refcli='" + ZrefCli.getText() + "' and t_sortie.NumFacture='" + Znfac.getText() + "' group by t_sortie.refart order by t_sortie.Numcom";
                rs = st.executeQuery(reqfac);
                double tot = 0.0;
                int numfac = 0, numcom, qte, pu;
                String datefac = "", nomcli = "", artic;
                JTextArea jtd = new JTextArea();
                while (rs.next()) {
                    numfac = rs.getInt(1);
                    datefac = rs.getString(2);
                    numcom = rs.getInt(3);
                    artic = rs.getString(4);
                    qte = rs.getInt(5);
                    pu = rs.getInt(6);
                    tot = tot + rs.getInt(7);
                    nomcli = rs.getString(8);
                    jtd.setText(jtd.getText() + "\n" + numcom + ". " + artic + " : " + qte + " X " + pu);
                }
                vueFac.TextFac.setText(vueFac.TextFac.getText() + "Nom du client : " + nomcli + "\n-------------------------------\n\n\tFacture numéro : " + numfac + "       Date : " + datefac + "\n\t---------------------------------------------------------------------\n");
                vueFac.TextFac.setText(vueFac.TextFac.getText() + jtd.getText());
                ChiffreLettre cl = new ChiffreLettre();
                cl.setMontant("" + tot + ".00");
                cl.calculer_glob();
                vueFac.TextFac.setText(vueFac.TextFac.getText() + "\n----------------------------------------------------" + "\nTotal : " + tot + "\nTotal en lettre : " + cl.getMontantLettre() + "\n------------------------------------------------------------------");
                vueFac.setVisible(true);
            } catch (Exception ex) {
                System.out.print(ex.toString());
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(F_sortie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(F_sortie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(F_sortie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(F_sortie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                F_sortie dialog = new F_sortie(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TabCom;
    private javax.swing.JComboBox Zart;
    private javax.swing.JComboBox Zcli;
    private com.toedter.calendar.JDateChooser Zdate;
    private javax.swing.JTextField Znet;
    private javax.swing.JTextField Znfac;
    private javax.swing.JTextField Zpu;
    private javax.swing.JTextField Zqte;
    private javax.swing.JTextField ZrefArt;
    private javax.swing.JTextField ZrefCli;
    private picturepanel.ImagePanel imagePanel1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jstabrech;
    private javax.swing.JRadioButton radcli;
    private javax.swing.JRadioButton radprod;
    private javax.swing.JTable tabrech;
    private javax.swing.JTextField txtnom;
    private javax.swing.JTextField zpustock;
    private javax.swing.JTextField zqtestock;
    // End of variables declaration//GEN-END:variables
}
